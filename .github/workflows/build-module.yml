name: Create Release for GL-MT6000

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - tag: "24.10.0-rc5"
            pkgarch: aarch64_cortex-a53
            target: mediatek
            subtarget: filogic
            vermagic: "9469a6c8c449c47e503c05678ea1559d-r1"

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: Cache Tools and Kernel
        id: cache-tools-kernel
        uses: actions/cache@v4
        env:
          cache-name: "cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}"
        with:
          path: |
            build_dir/host/
            staging_dir/host/
          key: ${{ runner.os }}-build-tools-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-tools-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-

      - name: Setup Build Environment
        run: |
          echo "Setting up environment for ${{ matrix.build_env.pkgarch }}, target: ${{ matrix.build_env.target }}, subtarget: ${{ matrix.build_env.subtarget }}"

          # Setup feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a

          # Create minimal config
          cat <<EOF > .config
CONFIG_TARGET_mediatek=y
CONFIG_TARGET_mediatek_filogic=y
CONFIG_TARGET_mediatek_filogic_DEVICE_glinet_gl-mt6000=y
CONFIG_PACKAGE_kmod-amneziawg=m
CONFIG_PACKAGE_amneziawg-tools=y
CONFIG_PACKAGE_luci-app-amneziawg=y
CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m
CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m
CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m
# CONFIG_TARGET_IMAGES_PAD is not set
# CONFIG_TARGET_ROOTFS_INITRAMFS is not set
# CONFIG_TARGET_ROOTFS_SQUASHFS is not set
# CONFIG_TARGET_BUILD_KERNEL is not set
EOF

          make defconfig

      - name: Build Tools and Toolchain
        run: |
          make tools/install -i -j$(nproc)
          make toolchain/install -i -j$(nproc)

      - name: Build Kernel Modules
        run: |
          echo "Building only kernel modules..."
          make target/linux/modules/compile -i -j$(nproc) V=s
          cat ./build_dir/target-*/linux-*/linux-*/.vermagic || true

          # Check vermagic
          VERMAGIC=$(cat ./build_dir/target-*/linux-*/linux-*/.vermagic)
          VERMAGIC_EXPECTED=${{ matrix.build_env.vermagic }}
          if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
            echo "Vermagic mismatch: $VERMAGIC, expected: $VERMAGIC_EXPECTED"
            exit 1
          fi

      - name: Build AmneziaWG Packages
        run: |
          make package/kmod-amneziawg/{clean,download,prepare} V=s || true
          make package/kmod-amneziawg/compile V=s || true
          make package/luci-app-amneziawg/{clean,download,prepare}
          make package/luci-app-amneziawg/compile V=s
          make package/amneziawg-tools/{clean,download,prepare}
          make package/amneziawg-tools/compile

      - name: Prepare Artifacts
        run: |
          tag_name=${{ github.ref_name }}
          mkdir -p awgrelease
          postfix="${tag_name}_v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"

          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk
          cp bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

          # Create a zip for easier download
          cd awgrelease
          zip ../amneziawg_release_${postfix}.zip *

      - name: Release Artifacts
        uses: softprops/action-gh-release@v1
        with:
          files: |
            awgrelease/*.ipk
            amneziawg_release_*.zip
