name: Build AmneziaWG for GL.iNet GL-MT6000
on: 
  workflow_dispatch:
    push:
      tags:
        - "v*.*.*"

jobs:
  build:
    name: "OpenWrt Build for GL.iNet"
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        build_env:
          - tag: "24.10.0-rc5"
            pkgarch: "aarch64_cortex-a53"
            target: "mediatek"
            subtarget: "filogic"
            vermagic: "9469a6c8c449c47e503c05678ea1559d-r1"

    steps:
      - name: Checkout OpenWrt
        uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v24.10.0-rc5
          fetch-depth: 0

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential libncurses5-dev gawk git libssl-dev \
            gettext zlib1g-dev swig unzip time rsync python3 python3-setuptools \
            binutils

      - name: Setup feeds
        run: |
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Configure build
        run: |
          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          make defconfig CONFIG_TERMINAL=y2j NONINTERACTIVE=1

      - name: Build toolchain and kernel
        run: |
          make tools/install -j$(nproc)
          make toolchain/install -j$(nproc)
          make target/linux/{clean,prepare} V=s
          make target/linux/compile -j$(nproc) V=s

      - name: Build packages
        run: |
          make package/kmod-amneziawg/{clean,compile} V=s
          make package/luci-app-amneziawg/{clean,compile} V=s
          make package/amneziawg-tools/{clean,compile} V=s

      - name: Patch Vermagic in binary packages
        run: |
          find bin/ -name "kmod-amneziawg*.ipk" | while read pkg; do
            echo "Patching package: $pkg"
            
            # Create temp dir
            TEMPDIR=$(mktemp -d)
            cp "$pkg" "$TEMPDIR/"
            cd "$TEMPDIR"
            
            # Extract package
            mkdir data
            tar -xzf "$(basename "$pkg")" -C data
            
            # Find and patch control file
            CONTROL_FILE=$(find data -name control)
            if [ -z "$CONTROL_FILE" ]; then
              echo "Error: control file not found in package"
              exit 1
            fi
            
            # Patch vermagic
            sed -i 's/83c6d4e14f7353564d3cadaf38a15bef/9469a6c8c449c47e503c05678ea1559d-r1/g' "$CONTROL_FILE"
            
            # Repackage
            tar -czf "$(basename "$pkg")" -C data .
            
            # Verify changes
            echo "Verifying changes:"
            tar -Ozxf "$(basename "$pkg")" | tar -Ox | grep -a "vermagic"
            
            # Replace original
            cp "$(basename "$pkg")" "$pkg"
            
            # Cleanup
            cd -
            rm -rf "$TEMPDIR"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gl-inet-packages
          path: |
            bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/*.ipk
            bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk
         
