name: Create Release on Tag
on: 
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch }} :: ${{ matrix.build_env.target }}/${{ matrix.build_env.subtarget }} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - tag: "24.10.0-rc5"
            pkgarch: aarch64_cortex-a53
            target: mediatek
            subtarget: filogic
            vermagic: "9469a6c8c449c47e503c05678ea1559d-r1"

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: v${{ matrix.build_env.tag }}
          fetch-depth: 0

      - name: Cache Tools and Kernel
        id: cache-tools-kernel
        uses: actions/cache@v4
        env:
          cache-name: "cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch }}-${{ matrix.build_env.target }}-${{ matrix.build_env.subtarget }}"
        with:
          path: "**"
          key: ${{ runner.os }}-build-vm4-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-vm4-cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch }}-

      - name: Building kernel and tools
        run: |
          echo "pkgarch: ${{ matrix.build_env.pkgarch }}, target: ${{ matrix.build_env.target }}, subtarget: ${{ matrix.build_env.subtarget }}"

          # Скачиваем feeds и config
          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target }}/${{ matrix.build_env.subtarget }}/feeds.buildinfo -O feeds.conf
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> ./feeds.conf
          ./scripts/feeds update && ./scripts/feeds install -a

          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target }}/${{ matrix.build_env.subtarget }}/config.buildinfo -O .config

          # Добавляем корректный LOCALVERSION и запрещаем AUTO
          echo 'CONFIG_LOCALVERSION="~9469a6c8c449c47e503c05678ea1559d-r1"' >> .config
          echo '# CONFIG_LOCALVERSION_AUTO is not set' >> .config
          echo '# CONFIG_KERNEL_BUILD_USER is not set' >> .config
          echo '# CONFIG_KERNEL_BUILD_DOMAIN is not set' >> .config

          # Применяем настройки
          make defconfig

          echo "    > make tools/install"
          make tools/install -i -j $(nproc)

          echo "    > make toolchain/install"
          make toolchain/install -i -j $(nproc)

          echo "    > make target/linux/compile"
          make target/linux/compile -i -j $(nproc) V=s

          # Проверяем vermagic
          VERMAGIC=$(cat ./build_dir/target-*/linux-*/linux-*/.vermagic)
          VERMAGIC_EXPECTED=${{ matrix.build_env.vermagic }}
          echo "Vermagic built: $VERMAGIC"
          if [ "$VERMAGIC" != "$VERMAGIC_EXPECTED" ]; then
            echo "ERROR: Vermagic mismatch. Built: $VERMAGIC, Expected: $VERMAGIC_EXPECTED"
            exit 1
          fi

      - name: Build AmneziaWG
        run: |
          echo "Building AmneziaWG..."
          make package/kmod-amneziawg/{clean,download,prepare} V=s || true
          make package/kmod-amneziawg/compile V=s || true
          make package/luci-app-amneziawg/{clean,download,prepare}
          make package/luci-app-amneziawg/compile V=s
          make package/amneziawg-tools/{clean,download,prepare}
          make package/amneziawg-tools/compile

      - name: Prepare artifacts
        run: |
          tag_name=${{ github.ref_name }}
          mkdir -p awgrelease
          postfix="${tag_name}_v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch }}_${{ matrix.build_env.target }}_${{ matrix.build_env.subtarget }}"
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk
          cp bin/targets/${{ matrix.build_env.target }}/${{ matrix.build_env.subtarget }}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk
