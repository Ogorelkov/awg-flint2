name: Build AmneziaWG for GL.iNet GL-MT6000
on: 
  workflow_dispatch:
    push:
      tags:
        - "v*.*.*"

jobs:
  build:
    name: "v${{ matrix.build_env.tag }} - ${{ matrix.build_env.pkgarch}} :: ${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}} build"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_env:
          - tag: "24.10.0-rc5"
            pkgarch: aarch64_cortex-a53
            target: mediatek
            subtarget: filogic
            vermagic: "9469a6c8c449c47e503c05678ea1559d-r1"  # Версия с роутера

    steps:
      - uses: actions/checkout@v4
        with:
          repository: openwrt/openwrt
          ref: 6dacba30a7  # Точный коммит из OPENWRT_VERSION
          fetch-depth: 0

      - name: Cache Tools and Kernel
        id: cache-tools-kernel
        uses: actions/cache@v4
        env:
          cache-name: "cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-${{ matrix.build_env.target}}-${{ matrix.build_env.subtarget}}"
        with:
          path: "**"
          key: ${{ runner.os }}-build-vm4-${{ env.cache-name }}
          restore-keys: |
            ${{ runner.os }}-build-vm4-cache-tools-kernel-${{ matrix.build_env.tag }}-${{ matrix.build_env.pkgarch}}-

      - name: Building kernel and tools
        run: |
          echo "pkgarch: ${{ matrix.build_env.pkgarch}}, target:${{ matrix.build_env.target}}, subtarget: ${{ matrix.build_env.subtarget}}"
          
          # Очистка
          make clean
          make dirclean

          # Настройка feeds
          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/feeds.buildinfo -O feeds.conf
          echo "src-git awgopenwrt https://github.com/yury-sannikov/awg-openwrt.git" >> ./feeds.conf
          ./scripts/feeds update && ./scripts/feeds install -a

          # Конфигурация (без интерактивного меню)
          wget https://downloads.openwrt.org/releases/${{ matrix.build_env.tag }}/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/config.buildinfo -O .config
          echo "CONFIG_PACKAGE_kmod-amneziawg=m" >> .config
          echo "CONFIG_PACKAGE_amneziawg-tools=y" >> .config
          echo "CONFIG_PACKAGE_luci-app-amneziawg=y" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-lib-chacha20poly1305=m" >> .config
          echo "CONFIG_PACKAGE_kmod-crypto-chacha20poly1305=m" >> .config
          
          # Принудительное задание Vermagic
          sed -i "s/CONFIG_VERSION_CODE=.*/CONFIG_VERSION_CODE=\"${{ matrix.build_env.vermagic }}\"/" .config
          make defconfig NONINTERACTIVE=1

          # Сборка инструментов и ядра
          echo ">> Сборка tools и toolchain..."
          make tools/install -j$(nproc)
          make toolchain/install -j$(nproc)

          echo ">> Пересборка ядра..."
          make target/linux/{clean,prepare} V=s
          make target/linux/compile -j$(nproc) V=s

          # Проверка Vermagic
          VERMAGIC=$(cat ./build_dir/target-*/linux-*/linux-*/.vermagic)
          echo "Текущий Vermagic: $VERMAGIC"
          echo "Ожидаемый Vermagic: ${{ matrix.build_env.vermagic }}"
          if [ "$VERMAGIC" != "${{ matrix.build_env.vermagic }}" ]; then
            echo "Ошибка: Vermagic не совпадает!"
            exit 1
          fi

      - name: Build AmneziaWG
        run: |
          # Сборка пакетов
          echo ">> Сборка kmod-amneziawg..."
          make package/kmod-amneziawg/{clean,compile} V=s || true

          echo ">> Сборка luci-app-amneziawg..."
          make package/luci-app-amneziawg/{clean,compile} V=s

          echo ">> Сборка amneziawg-tools..."
          make package/amneziawg-tools/{clean,compile} V=s

      - name: Prepare artifacts
        run: |
          tag_name=${{ github.ref_name }}
          mkdir -p awgrelease
          postfix="${tag_name}_v${{ matrix.build_env.tag }}_${{ matrix.build_env.pkgarch}}_${{ matrix.build_env.target}}_${{ matrix.build_env.subtarget}}"
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/amneziawg-tools_*.ipk awgrelease/amneziawg-tools_${postfix}.ipk
          cp bin/packages/${{ matrix.build_env.pkgarch }}/awgopenwrt/luci-app-amneziawg_*.ipk awgrelease/luci-app-amneziawg_${postfix}.ipk
          cp bin/targets/${{ matrix.build_env.target}}/${{ matrix.build_env.subtarget}}/packages/kmod-amneziawg_*.ipk awgrelease/kmod-amneziawg_${postfix}.ipk

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: awgrelease/*.ipk
